defaults:
  run:
    # establish working directory
    working-directory: rdt_apiandmvc


# break down of tasks
jobs:
  build:
    name: building
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet restore ./aspnet_api_store/
      - run: dotnet build ./aspnet_api_store/
      - run: dotnet restore ./aspnet_mvc/
      - run: dotnet build ./aspnet_mvc/

  test:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      # selects an action
      - uses: actions/checkout@v2
      - run: dotnet test ./asp_api_store/
      - run: dotnet test ./aspnet_mvc/

  analyze:
    needs:
        - build
        - test
    runs-on: ubuntu-20.04
    env:
      SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      # runs a command line command
      - run: dotnet tool install --global dotnet-sonarscanner
      - run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Revature-Dev-News_Revature-Dev-Tribune" /o:"rdtp2" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./aspnet_api_store/
          dotnet test ./aspnet_api_store/
          dotnet build ./aspnet_mvc/
          dotnet test ./aspnet_mvc/
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  pack:
    needs:
      - build
      - test
      - analyze
    runs-on: ubuntu-20.04
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_SECRET_TEST }}
      DOCKER_USER: ${{ secrets.DOCKER_USER_TEST }}
    steps:
      - uses: actions/checkout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f aspnet_api_store/dockerfile -t tribuneapi .
      - run: docker image tag tribuneapi elock721/tribunetest:tribuneapi
      - run: docker image push elock721/tribunetest:tribuneapi
      - run: docker image build -f aspnet_mvc/dockerfile -t tribunemvc .
      - run: docker image tag tribunemvc elock721/tribunetest:tribunemvc
      - run: docker image push elock721/tribunetest:tribunemvc
      - run: docker logout


  deploy:
    needs:
      - build
      - pack
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: rdtproject2api
          images: elock721/tribunetest:tribuneapi
      - uses: azure/webapps-deploy@v2
        with:
          app-name: rdtp2final
          images: elock721/tribunetest:tribunemvc

  deploy_mvc:
    needs:
      - build
      - pack
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/webapps-deploy@v2
        with:
          app-name: rdtp2final
          images: elock721/tribunetest:tribunemvc

  deploy_api:
      needs:
        - build
        - pack
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - uses: azure/login@v1
          with:
              creds: ${{ secrets.AZURE_CREDENTIALS_1 }}
        - uses: azure/webapps-deploy@v2
          with:
              app-name: rdtproject2api
              images: elock721/tribunetest:tribuneapi



on: push

